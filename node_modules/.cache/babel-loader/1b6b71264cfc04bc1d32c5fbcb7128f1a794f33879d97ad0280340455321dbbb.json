{"ast":null,"code":"var _jsxFileName = \"/Users/evelynpark/Desktop/bell-day/src/pages/Exam.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { DAYS, norm } from \"../data\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\n\n// ----- 유틸: 단어 정규화 -----\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst splitWords = s => norm(s).split(\" \").filter(Boolean);\n\n// ----- 유틸: 정답 문장을 korChunks 비율로 \"영어 청크\"로 자르기 -----\nfunction chunkAnswerByKor(answer, korChunks) {\n  const words = splitWords(answer);\n  if (!(korChunks !== null && korChunks !== void 0 && korChunks.length)) return [words];\n\n  // korChunks 길이(문자 수) 비율로 단어 수 배분\n  const lens = korChunks.map(c => (c || \"\").length || 1);\n  const totalLen = lens.reduce((a, b) => a + b, 0);\n  const totalWords = words.length;\n\n  // 각 청크에 단어 개수 배정(반올림 누적 보정)\n  const alloc = [];\n  let used = 0;\n  for (let i = 0; i < lens.length; i++) {\n    let n = Math.round(totalWords * (lens[i] / totalLen));\n    // 마지막 청크에 남은 단어 몰아주기\n    if (i === lens.length - 1) n = totalWords - used;\n    alloc.push(Math.max(0, n));\n    used += n;\n  }\n  // 자르기\n  const chunks = [];\n  let idx = 0;\n  for (const n of alloc) {\n    chunks.push(words.slice(idx, idx + n));\n    idx += n;\n  }\n  return chunks;\n}\n\n// ----- 유틸: 청크/단어 채점 -----\nfunction scoreByChunks(user, answer, korChunks) {\n  const u = splitWords(user);\n  const a = splitWords(answer);\n\n  // 위치기반 단어 채점(간단하게 포지션 매칭)\n  const wordResults = a.map((w, i) => ({\n    word: w,\n    ok: u[i] === w\n  }));\n\n  // 청크로 다시 묶기\n  const aChunks = chunkAnswerByKor(answer, korChunks);\n  const byChunk = [];\n  let cursor = 0;\n  for (const ch of aChunks) {\n    const wr = wordResults.slice(cursor, cursor + ch.length);\n    const ok = wr.filter(x => x.ok).length;\n    byChunk.push({\n      words: wr,\n      ok,\n      total: ch.length\n    });\n    cursor += ch.length;\n  }\n  const totalOk = wordResults.filter(x => x.ok).length;\n  const total = wordResults.length || 1;\n  return {\n    byChunk,\n    totalOk,\n    total,\n    pct: Math.round(totalOk / total * 100)\n  };\n}\nexport default function Exam() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    day\n  } = useParams();\n  const nav = useNavigate();\n  const items = DAYS[day] || [];\n  const [idx, setIdx] = useState(0);\n  const [phase, setPhase] = useState(\"speak\"); // speak -> type\n  const [input, setInput] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [recognizing, setRecognizing] = useState(false);\n\n  // 세션 누적\n  const sessionRef = useRef({\n    name: (state === null || state === void 0 ? void 0 : state.name) || \"\",\n    date: (state === null || state === void 0 ? void 0 : state.date) || \"\",\n    day,\n    answers: [] // {idx, kor, answer, user, phase, score}\n  });\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.name)) nav(\"/\");\n  }, [state, nav]);\n  const current = items[idx];\n  const answer = (current === null || current === void 0 ? void 0 : current.eng) || \"\";\n  const kor = (current === null || current === void 0 ? void 0 : current.korChunks) || [];\n  const result = useMemo(() => show ? scoreByChunks(input, answer, kor) : null, [show, input, answer, kor]);\n\n  // 말하기(STT)\n  const handleSpeak = () => {\n    const SR = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SR) {\n      alert(\"크롬에서만 말하기가 지원됩니다.\");\n      return;\n    }\n    const recog = new SR();\n    recog.lang = \"en-US\";\n    recog.interimResults = false;\n    recog.maxAlternatives = 1;\n    recog.onstart = () => setRecognizing(true);\n    recog.onend = () => setRecognizing(false);\n    recog.onresult = e => {\n      const text = e.results[0][0].transcript;\n      setInput(text);\n      setShow(true);\n    };\n    recog.start();\n  };\n\n  // 현재 문제 저장\n  const saveCurrent = mode => {\n    sessionRef.current.answers.push({\n      idx,\n      kor: kor.join(\" / \"),\n      answer,\n      user: input,\n      phase: mode,\n      score: result ? {\n        ok: result.totalOk,\n        total: result.total,\n        pct: result.pct\n      } : {\n        ok: 0,\n        total: splitWords(answer).length,\n        pct: 0\n      }\n    });\n  };\n  const toTypePhase = () => {\n    if (!show) {\n      alert(\"먼저 채점하기를 눌러주세요.\");\n      return;\n    }\n    saveCurrent(\"speak\");\n    setPhase(\"type\");\n    setInput(\"\");\n    setShow(false);\n  };\n  const nextItem = () => {\n    if (!show) {\n      alert(\"먼저 채점하기를 눌러주세요.\");\n      return;\n    }\n    saveCurrent(\"type\");\n    if (idx + 1 < items.length) {\n      setIdx(idx + 1);\n      setPhase(\"speak\");\n      setInput(\"\");\n      setShow(false);\n    } else {\n      // 세션 저장 후 결과 페이지로 이동\n      const all = JSON.parse(localStorage.getItem(\"bellcat:sessions\") || \"[]\");\n      const session = {\n        ...sessionRef.current,\n        createdAt: new Date().toISOString()\n      };\n      all.push(session);\n      localStorage.setItem(\"bellcat:sessions\", JSON.stringify(all));\n      nav(\"/result\", {\n        state: {\n          session\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chip\",\n        style: {\n          marginBottom: 8\n        },\n        children: [\"\\uBB38\\uC81C \", idx + 1, \" / \", items.length, \" \\xB7 \", phase === \"speak\" ? \"말하기\" : \"쓰기\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"yellow\",\n        style: {\n          marginBottom: 12,\n          fontWeight: 600\n        },\n        children: kor.join(\" / \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        rows: 2,\n        placeholder: \"\\uC601\\uC5B4\\uB85C \\uC785\\uB825 (\\uC2AC\\uB798\\uC2DC \\uC5C6\\uC5B4\\uB3C4 \\uB428)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          justifyContent: \"center\",\n          marginTop: 10\n        },\n        children: [phase === \"speak\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn purple\",\n          onClick: handleSpeak,\n          children: recognizing ? \"🎤 듣는 중...\" : \"🎙 말하기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: () => setShow(true),\n          children: \"\\uCC44\\uC810\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), phase === \"speak\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn success\",\n          onClick: toTypePhase,\n          children: \"\\uB2E4\\uC74C \\uB2E8\\uACC4(\\uC4F0\\uAE30)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn success\",\n          onClick: nextItem,\n          children: \"\\uB2E4\\uC74C \\uBB38\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), show && result && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"\\uCCAD\\uD06C \\uCC44\\uC810\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gap: 8,\n            marginTop: 8\n          },\n          children: result.byChunk.map((ch, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: \"1px solid #eee\",\n              borderRadius: 8,\n              padding: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              style: {\n                marginBottom: 6\n              },\n              children: [\"KOR \", i + 1, \": \", kor[i] || \"-\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ch.words.map((w, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: w.ok ? \"word-ok\" : \"word-bad\",\n                children: w.word + \" \"\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"muted\",\n              children: [ch.ok, \"/\", ch.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10,\n            fontWeight: 700\n          },\n          children: [\"\\uCD1D\\uC810: \", result.totalOk, \"/\", result.total, \" (\", result.pct, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: \"muted\",\n            children: \"\\uC815\\uB2F5 \\uBB38\\uC7A5 \\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 6\n            },\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(Exam, \"cwfPDNgr5rjPRvZIfj2hPy+x13U=\", false, function () {\n  return [useLocation, useParams, useNavigate];\n});\n_c = Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["useLocation","useNavigate","useParams","DAYS","norm","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","splitWords","s","split","filter","Boolean","chunkAnswerByKor","answer","korChunks","words","length","lens","map","c","totalLen","reduce","a","b","totalWords","alloc","used","i","n","Math","round","push","max","chunks","idx","slice","scoreByChunks","user","u","wordResults","w","word","ok","aChunks","byChunk","cursor","ch","wr","x","total","totalOk","pct","Exam","_s","state","day","nav","items","setIdx","phase","setPhase","input","setInput","show","setShow","recognizing","setRecognizing","sessionRef","name","date","answers","current","eng","kor","result","handleSpeak","SR","window","SpeechRecognition","webkitSpeechRecognition","alert","recog","lang","interimResults","maxAlternatives","onstart","onend","onresult","e","text","results","transcript","start","saveCurrent","mode","join","score","toTypePhase","nextItem","all","JSON","parse","localStorage","getItem","session","createdAt","Date","toISOString","setItem","stringify","className","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","value","onChange","target","rows","placeholder","justifyContent","marginTop","onClick","display","gap","border","borderRadius","padding","j","_c","$RefreshReg$"],"sources":["/Users/evelynpark/Desktop/bell-day/src/pages/Exam.js"],"sourcesContent":["import { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { DAYS, norm } from \"../data\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\n\n// ----- 유틸: 단어 정규화 -----\nconst splitWords = (s) => norm(s).split(\" \").filter(Boolean);\n\n// ----- 유틸: 정답 문장을 korChunks 비율로 \"영어 청크\"로 자르기 -----\nfunction chunkAnswerByKor(answer, korChunks) {\n  const words = splitWords(answer);\n  if (!korChunks?.length) return [words];\n\n  // korChunks 길이(문자 수) 비율로 단어 수 배분\n  const lens = korChunks.map(c => (c || \"\").length || 1);\n  const totalLen = lens.reduce((a,b)=>a+b,0);\n  const totalWords = words.length;\n\n  // 각 청크에 단어 개수 배정(반올림 누적 보정)\n  const alloc = [];\n  let used = 0;\n  for (let i=0;i<lens.length;i++){\n    let n = Math.round(totalWords * (lens[i]/totalLen));\n    // 마지막 청크에 남은 단어 몰아주기\n    if (i === lens.length-1) n = totalWords - used;\n    alloc.push(Math.max(0,n));\n    used += n;\n  }\n  // 자르기\n  const chunks = [];\n  let idx = 0;\n  for (const n of alloc){\n    chunks.push(words.slice(idx, idx+n));\n    idx += n;\n  }\n  return chunks;\n}\n\n// ----- 유틸: 청크/단어 채점 -----\nfunction scoreByChunks(user, answer, korChunks) {\n  const u = splitWords(user);\n  const a = splitWords(answer);\n\n  // 위치기반 단어 채점(간단하게 포지션 매칭)\n  const wordResults = a.map((w,i)=>({ word:w, ok: u[i] === w }));\n\n  // 청크로 다시 묶기\n  const aChunks = chunkAnswerByKor(answer, korChunks);\n  const byChunk = [];\n  let cursor = 0;\n  for (const ch of aChunks){\n    const wr = wordResults.slice(cursor, cursor + ch.length);\n    const ok = wr.filter(x=>x.ok).length;\n    byChunk.push({\n      words: wr,\n      ok,\n      total: ch.length\n    });\n    cursor += ch.length;\n  }\n\n  const totalOk = wordResults.filter(x=>x.ok).length;\n  const total = wordResults.length || 1;\n  return { byChunk, totalOk, total, pct: Math.round(totalOk/total*100) };\n}\n\nexport default function Exam() {\n  const { state } = useLocation();\n  const { day } = useParams();\n  const nav = useNavigate();\n  const items = DAYS[day] || [];\n\n  const [idx, setIdx] = useState(0);\n  const [phase, setPhase] = useState(\"speak\"); // speak -> type\n  const [input, setInput] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [recognizing, setRecognizing] = useState(false);\n\n  // 세션 누적\n  const sessionRef = useRef({\n    name: state?.name || \"\",\n    date: state?.date || \"\",\n    day,\n    answers: [] // {idx, kor, answer, user, phase, score}\n  });\n\n  useEffect(()=>{\n    if (!state?.name) nav(\"/\");\n  }, [state, nav]);\n\n  const current = items[idx];\n  const answer = current?.eng || \"\";\n  const kor = current?.korChunks || [];\n\n  const result = useMemo(\n    ()=> show ? scoreByChunks(input, answer, kor) : null,\n    [show, input, answer, kor]\n  );\n\n  // 말하기(STT)\n  const handleSpeak = () => {\n    const SR = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SR) { alert(\"크롬에서만 말하기가 지원됩니다.\"); return; }\n    const recog = new SR();\n    recog.lang = \"en-US\";\n    recog.interimResults = false;\n    recog.maxAlternatives = 1;\n    recog.onstart = ()=> setRecognizing(true);\n    recog.onend = ()=> setRecognizing(false);\n    recog.onresult = (e)=>{\n      const text = e.results[0][0].transcript;\n      setInput(text);\n      setShow(true);\n    };\n    recog.start();\n  };\n\n  // 현재 문제 저장\n  const saveCurrent = (mode) => {\n    sessionRef.current.answers.push({\n      idx,\n      kor: kor.join(\" / \"),\n      answer,\n      user: input,\n      phase: mode,\n      score: result\n        ? { ok: result.totalOk, total: result.total, pct: result.pct }\n        : { ok: 0, total: splitWords(answer).length, pct: 0 }\n    });\n  };\n\n  const toTypePhase = () => {\n    if (!show) { alert(\"먼저 채점하기를 눌러주세요.\"); return; }\n    saveCurrent(\"speak\");\n    setPhase(\"type\");\n    setInput(\"\");\n    setShow(false);\n  };\n\n  const nextItem = () => {\n    if (!show) { alert(\"먼저 채점하기를 눌러주세요.\"); return; }\n    saveCurrent(\"type\");\n    if (idx + 1 < items.length) {\n      setIdx(idx + 1);\n      setPhase(\"speak\");\n      setInput(\"\");\n      setShow(false);\n    } else {\n      // 세션 저장 후 결과 페이지로 이동\n      const all = JSON.parse(localStorage.getItem(\"bellcat:sessions\") || \"[]\");\n      const session = { ...sessionRef.current, createdAt: new Date().toISOString() };\n      all.push(session);\n      localStorage.setItem(\"bellcat:sessions\", JSON.stringify(all));\n      nav(\"/result\", { state: { session } });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"chip\" style={{marginBottom:8}}>문제 {idx+1} / {items.length} · {phase===\"speak\"?\"말하기\":\"쓰기\"}</div>\n        <div className=\"yellow\" style={{ marginBottom: 12, fontWeight:600 }}>\n          {kor.join(\" / \")}\n        </div>\n\n        <textarea\n          value={input}\n          onChange={(e)=>setInput(e.target.value)}\n          rows={2}\n          placeholder=\"영어로 입력 (슬래시 없어도 됨)\"\n        />\n\n        <div className=\"row\" style={{justifyContent:\"center\", marginTop:10}}>\n          {phase === \"speak\" && (\n            <button className=\"btn purple\" onClick={handleSpeak}>\n              {recognizing ? \"🎤 듣는 중...\" : \"🎙 말하기\"}\n            </button>\n          )}\n          <button className=\"btn primary\" onClick={()=>setShow(true)}>채점하기</button>\n          {phase === \"speak\" ? (\n            <button className=\"btn success\" onClick={toTypePhase}>다음 단계(쓰기)</button>\n          ) : (\n            <button className=\"btn success\" onClick={nextItem}>다음 문제</button>\n          )}\n        </div>\n\n        {show && result && (\n          <div className=\"result\" style={{marginTop:12}}>\n            <b>청크 채점</b>\n            <div style={{display:\"grid\", gap:8, marginTop:8}}>\n              {result.byChunk.map((ch, i)=>(\n                <div key={i} style={{border:\"1px solid #eee\", borderRadius:8, padding:8}}>\n                  <div className=\"muted\" style={{marginBottom:6}}>\n                    KOR {i+1}: {kor[i] || \"-\"}\n                  </div>\n                  <div>\n                    {ch.words.map((w, j)=>(\n                      <span key={j} className={w.ok ? \"word-ok\" : \"word-bad\"}>\n                        {w.word + \" \"}\n                      </span>\n                    ))}\n                  </div>\n                  <div className=\"muted\">{ch.ok}/{ch.total}</div>\n                </div>\n              ))}\n            </div>\n\n            <div style={{marginTop:10, fontWeight:700}}>\n              총점: {result.totalOk}/{result.total} ({result.pct}%)\n            </div>\n\n            <details style={{marginTop:8}}>\n              <summary className=\"muted\">정답 문장 보기</summary>\n              <div style={{marginTop:6}}>{answer}</div>\n            </details>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}